warning: unused macro definition: `function`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/trace-var/src/lib.rs:10:14
   |
10 | macro_rules! function {
   |              ^^^^^^^^
   |
   = note: `#[warn(unused_macros)]` on by default

warning: unused macro definition: `dbg_fn`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/trace-var/src/lib.rs:28:14
   |
28 | macro_rules! dbg_fn {
   |              ^^^^^^

warning: `trace-var` (lib) generated 2 warnings
warning: unused attribute
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/bincode-trunk/src/lib.rs:29:1
   |
29 | #![crate_type = "dylib"]
   | ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
   |
   = note: `#[warn(unused_attributes)]` on by default
note: attribute also specified here
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/bincode-trunk/src/lib.rs:28:1
   |
28 | #![crate_type = "rlib"]
   | ^^^^^^^^^^^^^^^^^^^^^^^
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!

warning: `bincode` (lib) generated 1 warning
warning: unused imports: `BufMut`, `BytesMut`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/fsm/src/lib.rs:128:13
    |
128 | use bytes::{BytesMut, BufMut};
    |             ^^^^^^^^  ^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

warning: `rust-fsm` (lib) generated 1 warning
warning: unused imports: `BufMut`, `BytesMut`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/getset/src/generate.rs:8:13
  |
8 | use bytes::{BytesMut, BufMut};
  |             ^^^^^^^^  ^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `BufMut`, `BytesMut`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/getset/src/lib.rs:16:13
   |
16 | use bytes::{BufMut, BytesMut};
   |             ^^^^^^  ^^^^^^^^

warning: `getset` (lib) generated 2 warnings
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/fsm/rust_fsm_dsl/src/lib.rs:91] transfer_struct_name.clone() = Ident {
    ident: "Transfer",
    span: #0 bytes(12311..12319),
}
warning: type `MQTT_SN` should have an upper camel case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/MainMachine.rs:50:9
   |
50 |     pub MQTT_SN(DISCONNECTED)
   |         ^^^^^^^ help: convert the identifier to upper camel case: `MqttSn`
   |
   = note: `#[warn(non_camel_case_types)]` on by default

warning: variant `MSG_TYPE_ERR` should have an upper camel case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/MsgType.rs:37:5
   |
37 |     MSG_TYPE_ERR = 0xFF,
   |     ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `MsgTypeErr`

warning: variable does not need to be mutable
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/BroadcastAdvertise.rs:34:13
   |
34 |             mut buf,
   |             ----^^^
   |             |
   |             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/BroadcastAdvertise.rs:35:13
   |
35 |             mut to_send,
   |             ----^^^^^^^
   |             |
   |             help: remove this `mut`

warning: variable does not need to be mutable
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/BroadcastAdvertise.rs:44:13
   |
44 |         let mut transfer = Transfer {
   |             ----^^^^^^^^
   |             |
   |             help: remove this `mut`

warning: unused variable: `socket`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Functions.rs:90:16
   |
90 | pub fn connect(socket: &UdpSocket) -> BytesMut {
   |                ^^^^^^ help: if this is intentional, prefix it with an underscore: `_socket`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `input`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/MainMachine.rs:76:5
   |
76 |     input: MsgType,
   |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/MainMachine.rs:106:5
    |
106 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/MainMachine.rs:128:5
    |
128 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/MainMachine.rs:156:5
    |
156 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/MainMachine.rs:179:5
    |
179 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/MainMachine.rs:202:5
    |
202 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/MainMachine.rs:244:5
    |
244 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/MainMachine.rs:281:5
    |
281 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/MainMachine.rs:307:5
    |
307 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/MainMachine.rs:362:5
    |
362 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `transfer`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/MainMachine.rs:363:5
    |
363 |     transfer: &mut Transfer,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transfer`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/MainMachine.rs:376:5
    |
376 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `transfer`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/MainMachine.rs:377:5
    |
377 |     transfer: &mut Transfer,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transfer`

warning: unused variable: `topic_string`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/TopicDb.rs:53:30
   |
53 |     pub fn delete(&mut self, topic_string: &String) -> Option<u16> {
   |                              ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_topic_string`

warning: unused variable: `buf`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/BroadcastAdvertise.rs:34:13
   |
34 |             mut buf,
   |             ^^^^^^^ help: try ignoring the field: `buf: _`

warning: unused variable: `to_send`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/BroadcastAdvertise.rs:35:13
   |
35 |             mut to_send,
   |             ^^^^^^^^^^^ help: try ignoring the field: `to_send: _`

warning: unused variable: `transfer`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/BroadcastAdvertise.rs:44:17
   |
44 |         let mut transfer = Transfer {
   |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transfer`

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Advertise.rs:18:8
   |
18 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Advertise.rs:22:8
   |
22 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_gw_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Advertise.rs:26:8
   |
26 |     fn constraint_gw_id(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_duration`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Advertise.rs:30:8
   |
30 |     fn constraint_duration(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/ConAck.rs:15:12
   |
15 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/ConAck.rs:19:12
   |
19 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_return_code`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/ConAck.rs:23:12
   |
23 |     pub fn constraint_return_code(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `name`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/ConnectionDb.rs:10:5
   |
10 |     name: String,
   |     ^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Disconnect.rs:16:12
   |
16 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Disconnect.rs:20:12
   |
20 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_duration`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Disconnect.rs:24:12
   |
24 |     pub fn constraint_duration(_val: &u16) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/PingReq.rs:16:12
   |
16 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/PingReq.rs:20:12
   |
20 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_client_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/PingReq.rs:24:12
   |
24 |     pub fn constraint_client_id(_val: &u64) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/PingResp.rs:14:12
   |
14 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/PingResp.rs:18:12
   |
18 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Publish.rs:21:12
   |
21 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Publish.rs:25:12
   |
25 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_flags`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Publish.rs:29:12
   |
29 |     pub fn constraint_flags(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_topic_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Publish.rs:33:12
   |
33 |     pub fn constraint_topic_id(_val: &u16) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Publish.rs:37:12
   |
37 |     pub fn constraint_msg_id(_val: &u16) -> bool {
   |            ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_data`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Publish.rs:41:12
   |
41 |     pub fn constraint_data(_val: &String) -> bool {
   |            ^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/RegAck.rs:18:12
   |
18 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/RegAck.rs:22:12
   |
22 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_topic_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/RegAck.rs:26:12
   |
26 |     pub fn constraint_topic_id(_val: &u16) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/RegAck.rs:30:12
   |
30 |     pub fn constraint_msg_id(_val: &u16) -> bool {
   |            ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_return_code`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/RegAck.rs:34:12
   |
34 |     pub fn constraint_return_code(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Register.rs:19:12
   |
19 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Register.rs:23:12
   |
23 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_topic_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Register.rs:27:12
   |
27 |     pub fn constraint_topic_id(_val: &u16) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Register.rs:31:12
   |
31 |     pub fn constraint_msg_id(_val: &u16) -> bool {
   |            ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_topic_name`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Register.rs:35:12
   |
35 |     pub fn constraint_topic_name(_val: &String) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/SearchGw.rs:15:12
   |
15 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/SearchGw.rs:19:12
   |
19 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_radius`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/SearchGw.rs:23:12
   |
23 |     pub fn constraint_radius(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/GwInfo.rs:19:12
   |
19 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/GwInfo.rs:23:12
   |
23 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_gw_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/GwInfo.rs:27:12
   |
27 |     pub fn constraint_gw_id(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_gw_add`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/GwInfo.rs:31:12
   |
31 |     pub fn constraint_gw_add(_val: &String) -> bool {
   |            ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/SubAck.rs:20:12
   |
20 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/SubAck.rs:24:12
   |
24 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_flags`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/SubAck.rs:28:12
   |
28 |     pub fn constraint_flags(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_topic_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/SubAck.rs:32:12
   |
32 |     pub fn constraint_topic_id(_val: &u16) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/SubAck.rs:36:12
   |
36 |     pub fn constraint_msg_id(_val: &u16) -> bool {
   |            ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_return_code`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/SubAck.rs:40:12
   |
40 |     pub fn constraint_return_code(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Subscribe.rs:20:12
   |
20 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Subscribe.rs:24:12
   |
24 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_flags`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Subscribe.rs:28:12
   |
28 |     pub fn constraint_flags(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Subscribe.rs:32:12
   |
32 |     pub fn constraint_msg_id(_val: &u16) -> bool {
   |            ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_topic_name`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Subscribe.rs:36:12
   |
36 |     pub fn constraint_topic_name(_val: &String) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `any_as_u8_slice`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/TopicDb.rs:91:11
   |
91 | unsafe fn any_as_u8_slice<T: Sized>(p: &T) -> &[u8] {
   |           ^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/UnsubAck.rs:17:12
   |
17 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/UnsubAck.rs:21:12
   |
21 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/UnsubAck.rs:25:12
   |
25 |     pub fn constraint_msg_id(_val: &u16) -> bool {
   |            ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Unsubscribe.rs:20:12
   |
20 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Unsubscribe.rs:24:12
   |
24 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_flags`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Unsubscribe.rs:28:12
   |
28 |     pub fn constraint_flags(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Unsubscribe.rs:32:12
   |
32 |     pub fn constraint_msg_id(_val: &u16) -> bool {
   |            ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_topic_name`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Unsubscribe.rs:36:12
   |
36 |     pub fn constraint_topic_name(_val: &String) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillMsg.rs:18:12
   |
18 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillMsg.rs:22:12
   |
22 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_flags`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillMsg.rs:26:12
   |
26 |     pub fn constraint_flags(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_will_topic`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillMsg.rs:30:12
   |
30 |     pub fn constraint_will_topic(_val: &String) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillMsgReq.rs:15:12
   |
15 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillMsgReq.rs:19:12
   |
19 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillMsgResp.rs:15:12
   |
15 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillMsgResp.rs:19:12
   |
19 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_return_code`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillMsgResp.rs:23:12
   |
23 |     pub fn constraint_return_code(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillMsgUpd.rs:16:12
   |
16 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillMsgUpd.rs:20:12
   |
20 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_will_topic`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillMsgUpd.rs:24:12
   |
24 |     pub fn constraint_will_topic(_val: &String) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillTopic.rs:18:12
   |
18 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillTopic.rs:22:12
   |
22 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_flags`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillTopic.rs:26:12
   |
26 |     pub fn constraint_flags(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_will_topic`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillTopic.rs:30:12
   |
30 |     pub fn constraint_will_topic(_val: &String) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillTopicReq.rs:16:12
   |
16 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillTopicReq.rs:20:12
   |
20 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillTopicResp.rs:15:12
   |
15 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillTopicResp.rs:19:12
   |
19 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_return_code`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillTopicResp.rs:23:12
   |
23 |     pub fn constraint_return_code(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillTopicUpd.rs:18:12
   |
18 |     pub fn constraint_len(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillTopicUpd.rs:22:12
   |
22 |     pub fn constraint_msg_type(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_flags`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillTopicUpd.rs:26:12
   |
26 |     pub fn constraint_flags(_val: &u8) -> bool {
   |            ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_will_topic`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/WillTopicUpd.rs:30:12
   |
30 |     pub fn constraint_will_topic(_val: &String) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: module `Advertise` should have a snake case name
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:4:9
  |
4 | pub mod Advertise;
  |         ^^^^^^^^^ help: convert the identifier to snake case: `advertise`
  |
  = note: `#[warn(non_snake_case)]` on by default

warning: module `ConAck` should have a snake case name
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:5:5
  |
5 | mod ConAck;
  |     ^^^^^^ help: convert the identifier to snake case: `con_ack`

warning: module `Connect` should have a snake case name
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:6:9
  |
6 | pub mod Connect;
  |         ^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `connect`

warning: module `ConnectionDb` should have a snake case name
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:7:9
  |
7 | pub mod ConnectionDb;
  |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `connection_db`

warning: module `Disconnect` should have a snake case name
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:8:5
  |
8 | mod Disconnect;
  |     ^^^^^^^^^^ help: convert the identifier to snake case: `disconnect`

warning: module `Functions` should have a snake case name
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:9:9
  |
9 | pub mod Functions;
  |         ^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `functions`

warning: module `MainMachine` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:10:9
   |
10 | pub mod MainMachine;
   |         ^^^^^^^^^^^ help: convert the identifier to snake case: `main_machine`

warning: module `MessageDb` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:11:9
   |
11 | pub mod MessageDb;
   |         ^^^^^^^^^ help: convert the identifier to snake case: `message_db`

warning: module `MsgType` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:12:9
   |
12 | pub mod MsgType;
   |         ^^^^^^^ help: convert the identifier to snake case: `msg_type`

warning: module `PingReq` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:13:5
   |
13 | mod PingReq;
   |     ^^^^^^^ help: convert the identifier to snake case: `ping_req`

warning: module `PingResp` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:14:5
   |
14 | mod PingResp;
   |     ^^^^^^^^ help: convert the identifier to snake case: `ping_resp`

warning: module `Publish` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:15:5
   |
15 | mod Publish;
   |     ^^^^^^^ help: convert the identifier to snake case: `publish`

warning: module `RegAck` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:16:5
   |
16 | mod RegAck;
   |     ^^^^^^ help: convert the identifier to snake case: `reg_ack`

warning: module `Register` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:17:5
   |
17 | mod Register;
   |     ^^^^^^^^ help: convert the identifier to snake case: `register`

warning: module `SearchGw` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:18:5
   |
18 | mod SearchGw;
   |     ^^^^^^^^ help: convert the identifier to snake case: `search_gw`

warning: module `GwInfo` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:19:5
   |
19 | mod GwInfo;
   |     ^^^^^^ help: convert the identifier to snake case: `gw_info`

warning: module `StateEnum` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:20:9
   |
20 | pub mod StateEnum;
   |         ^^^^^^^^^ help: convert the identifier to snake case: `state_enum`

warning: module `SubAck` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:21:5
   |
21 | mod SubAck;
   |     ^^^^^^ help: convert the identifier to snake case: `sub_ack`

warning: module `Subscribe` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:22:5
   |
22 | mod Subscribe;
   |     ^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `subscribe`

warning: module `SubscriberDb` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:23:9
   |
23 | pub mod SubscriberDb;
   |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `subscriber_db`

warning: module `TopicDb` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:24:9
   |
24 | pub mod TopicDb;
   |         ^^^^^^^ help: convert the identifier to snake case: `topic_db`

warning: module `Transfer` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:25:9
   |
25 | pub mod Transfer;
   |         ^^^^^^^^ help: convert the identifier to snake case: `transfer`

warning: module `UnsubAck` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:26:5
   |
26 | mod UnsubAck;
   |     ^^^^^^^^ help: convert the identifier to snake case: `unsub_ack`

warning: module `Unsubscribe` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:27:5
   |
27 | mod Unsubscribe;
   |     ^^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `unsubscribe`

warning: module `WillMsg` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:28:5
   |
28 | mod WillMsg;
   |     ^^^^^^^ help: convert the identifier to snake case: `will_msg`

warning: module `WillMsgReq` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:29:5
   |
29 | mod WillMsgReq;
   |     ^^^^^^^^^^ help: convert the identifier to snake case: `will_msg_req`

warning: module `WillMsgResp` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:30:5
   |
30 | mod WillMsgResp;
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `will_msg_resp`

warning: module `WillMsgUpd` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:31:5
   |
31 | mod WillMsgUpd;
   |     ^^^^^^^^^^ help: convert the identifier to snake case: `will_msg_upd`

warning: module `WillTopic` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:32:5
   |
32 | mod WillTopic;
   |     ^^^^^^^^^ help: convert the identifier to snake case: `will_topic`

warning: module `WillTopicReq` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:33:5
   |
33 | mod WillTopicReq;
   |     ^^^^^^^^^^^^ help: convert the identifier to snake case: `will_topic_req`

warning: module `WillTopicResp` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:34:5
   |
34 | mod WillTopicResp;
   |     ^^^^^^^^^^^^^ help: convert the identifier to snake case: `will_topic_resp`

warning: module `WillTopicUpd` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:35:5
   |
35 | mod WillTopicUpd;
   |     ^^^^^^^^^^^^ help: convert the identifier to snake case: `will_topic_upd`

warning: module `Flags` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:36:9
   |
36 | pub mod Flags;
   |         ^^^^^ help: convert the identifier to snake case (notice the capitalization): `flags`

warning: module `BroadcastAdvertise` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/lib.rs:37:9
   |
37 | pub mod BroadcastAdvertise;
   |         ^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `broadcast_advertise`

warning: unused `Result` that must be used
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Functions.rs:64:13
   |
64 | /             transfer
65 | |                 .connection_db
66 | |                 .update(transfer.peer, &old_machine, &new_machine);
   | |___________________________________________________________________^
   |
   = note: `#[warn(unused_must_use)]` on by default
   = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Functions.rs:80:21
   |
80 |                     transfer.connection_db.create(transfer.peer, &new_machine);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled

warning: variable `QoS` should have a snake case name
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/MainMachine.rs:352:5
    |
352 | let QoS = QoS::new(sub.flags);
    |     ^^^ help: convert the identifier to snake case: `qo_s`

warning: module `QoS` should have a snake case name
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Flags.rs:1:9
  |
1 | pub mod QoS;
  |         ^^^ help: convert the identifier to snake case: `qo_s`

warning: module `DUP` should have a snake case name
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Flags.rs:2:9
  |
2 | pub mod DUP;
  |         ^^^ help: convert the identifier to snake case: `dup`

warning: module `Retain` should have a snake case name
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Flags.rs:3:9
  |
3 | pub mod Retain;
  |         ^^^^^^ help: convert the identifier to snake case: `retain`

warning: module `TopicIdType` should have a snake case name
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/mqtt-sn-lib/src/Flags.rs:4:9
  |
4 | pub mod TopicIdType;
  |         ^^^^^^^^^^^ help: convert the identifier to snake case: `topic_id_type`

warning: `mqtt-sn-lib` (lib) generated 148 warnings
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/fsm/rust_fsm_dsl/src/lib.rs:91] transfer_struct_name.clone() = Ident {
    ident: "Transfer",
    span: #0 bytes(38957..38965),
}
warning: unused import: `hint`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:2:11
  |
2 | use std::{hint, thread};
  |           ^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `Bytes`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:6:13
  |
6 | use bytes::{Bytes, BytesMut};
  |             ^^^^^

warning: unused imports: `Datelike`, `Local`, `Timelike`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:7:14
  |
7 | use chrono::{Datelike, Local, Timelike};
  |              ^^^^^^^^  ^^^^^  ^^^^^^^^

warning: unused import: `crossbeam_utils`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:10:5
   |
10 | use crossbeam_utils;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `simplelog::*`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:13:5
   |
13 | use simplelog::*;
   |     ^^^^^^^^^^^^

warning: unused imports: `MSG_TYPE_PUBREC`, `MSG_TYPE_SUBSCRIBE`, `RetransmitData`, `RetransmitHeader`, `flags`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:16:5
   |
16 |     flags,
   |     ^^^^^
...
24 |     TimingWheel2::{RetransmitData, RetransmitHeader},
   |                    ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^
25 |     MSG_TYPE_CONNACK, MSG_TYPE_CONNECT, MSG_TYPE_PUBACK, MSG_TYPE_PUBLISH,
26 |     MSG_TYPE_PUBREC, MSG_TYPE_SUBACK, MSG_TYPE_SUBSCRIBE,
   |     ^^^^^^^^^^^^^^^                   ^^^^^^^^^^^^^^^^^^

warning: unused import: `trace_var::trace_var`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:28:5
   |
28 | use trace_var::trace_var;
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused macro definition: `function`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:30:14
   |
30 | macro_rules! function {
   |              ^^^^^^^^
   |
   = note: `#[warn(unused_macros)]` on by default

warning: unused macro definition: `dbg_fn`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:48:14
   |
48 | macro_rules! dbg_fn {
   |              ^^^^^^

warning: unused macro definition: `dbg_buf`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:81:14
   |
81 | macro_rules! dbg_buf {
   |              ^^^^^^^

warning: unused imports: `CLEAN_SESSION_FALSE`, `CLEAN_SESSION_TRUE`, `CleanSessionConst`, `DUP_FALSE`, `DUP_TRUE`, `DupConst`, `MSG_LEN_PUBREC`, `MSG_TYPE_CONNACK`, `MSG_TYPE_CONNECT`, `MSG_TYPE_PUBACK`, `MSG_TYPE_PUBCOMP`, `MSG_TYPE_PUBLISH`, `MSG_TYPE_PUBREC`, `MSG_TYPE_PUBREL`, `MSG_TYPE_SUBACK`, `MSG_TYPE_SUBSCRIBE`, `QOS_LEVEL_0`, `QOS_LEVEL_1`, `QOS_LEVEL_2`, `QOS_LEVEL_3`, `QoSConst`, `RETAIN_FALSE`, `RETAIN_TRUE`, `RETURN_CODE_ACCEPTED`, `RetainConst`, `StateMachine`, `TOPIC_ID_TYPE_NORNAL`, `TOPIC_ID_TYPE_PRE_DEFINED`, `TOPIC_ID_TYPE_RESERVED`, `TOPIC_ID_TYPE_SHORT`, `TopicIdTypeConst`, `WILL_FALSE`, `WILL_TRUE`, `WillConst`, `flag_qos_level`, `flags_set`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ConnAck.rs:7:9
   |
7  |         flag_qos_level, flags_set, CleanSessionConst, DupConst, QoSConst,
   |         ^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^
8  |         RetainConst, TopicIdTypeConst, WillConst, CLEAN_SESSION_FALSE,
   |         ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^
9  |         CLEAN_SESSION_TRUE, DUP_FALSE, DUP_TRUE, QOS_LEVEL_0, QOS_LEVEL_1,
   |         ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^
10 |         QOS_LEVEL_2, QOS_LEVEL_3, RETAIN_FALSE, RETAIN_TRUE,
   |         ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^
11 |         TOPIC_ID_TYPE_NORNAL, TOPIC_ID_TYPE_PRE_DEFINED,
   |         ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^
12 |         TOPIC_ID_TYPE_RESERVED, TOPIC_ID_TYPE_SHORT, WILL_FALSE, WILL_TRUE,
   |         ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^
...
17 |     StateMachine,
   |     ^^^^^^^^^^^^
...
20 |     MSG_LEN_PUBREC,
   |     ^^^^^^^^^^^^^^
21 |     MSG_LEN_SUBACK,
22 |     MSG_TYPE_CONNACK,
   |     ^^^^^^^^^^^^^^^^
23 |     MSG_TYPE_CONNECT,
   |     ^^^^^^^^^^^^^^^^
24 |     MSG_TYPE_PUBACK,
   |     ^^^^^^^^^^^^^^^
25 |     MSG_TYPE_PUBCOMP,
   |     ^^^^^^^^^^^^^^^^
26 |     MSG_TYPE_PUBLISH,
   |     ^^^^^^^^^^^^^^^^
27 |     MSG_TYPE_PUBREC,
   |     ^^^^^^^^^^^^^^^
28 |     MSG_TYPE_PUBREL,
   |     ^^^^^^^^^^^^^^^
29 |     MSG_TYPE_SUBACK,
   |     ^^^^^^^^^^^^^^^
30 | 
31 |     MSG_TYPE_SUBSCRIBE,
   |     ^^^^^^^^^^^^^^^^^^
32 |     RETURN_CODE_ACCEPTED,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `CLEAN_SESSION_FALSE`, `CLEAN_SESSION_TRUE`, `CleanSessionConst`, `DUP_FALSE`, `DUP_TRUE`, `DupConst`, `Errors::ExoError`, `MSG_LEN_PUBACK`, `MSG_LEN_PUBREC`, `MSG_TYPE_PUBACK`, `MSG_TYPE_PUBCOMP`, `MSG_TYPE_PUBLISH`, `MSG_TYPE_PUBREC`, `MSG_TYPE_PUBREL`, `MSG_TYPE_SUBACK`, `MSG_TYPE_SUBSCRIBE`, `QOS_LEVEL_0`, `QOS_LEVEL_1`, `QOS_LEVEL_2`, `QOS_LEVEL_3`, `QoSConst`, `RETAIN_FALSE`, `RETAIN_TRUE`, `RETURN_CODE_ACCEPTED`, `RetainConst`, `TOPIC_ID_TYPE_NORNAL`, `TOPIC_ID_TYPE_PRE_DEFINED`, `TOPIC_ID_TYPE_RESERVED`, `TOPIC_ID_TYPE_SHORT`, `TopicIdTypeConst`, `WILL_FALSE`, `WILL_TRUE`, `WillConst`, `flag_qos_level`, `flags_set`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Connect.rs:9:9
   |
9  |         flag_qos_level, flags_set, CleanSessionConst, DupConst, QoSConst,
   |         ^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^
10 |         RetainConst, TopicIdTypeConst, WillConst, CLEAN_SESSION_FALSE,
   |         ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^
11 |         CLEAN_SESSION_TRUE, DUP_FALSE, DUP_TRUE, QOS_LEVEL_0, QOS_LEVEL_1,
   |         ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^
12 |         QOS_LEVEL_2, QOS_LEVEL_3, RETAIN_FALSE, RETAIN_TRUE,
   |         ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^
13 |         TOPIC_ID_TYPE_NORNAL, TOPIC_ID_TYPE_PRE_DEFINED,
   |         ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^
14 |         TOPIC_ID_TYPE_RESERVED, TOPIC_ID_TYPE_SHORT, WILL_FALSE, WILL_TRUE,
   |         ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^
...
18 |     Errors::ExoError,
   |     ^^^^^^^^^^^^^^^^
19 |     MSG_LEN_PUBACK,
   |     ^^^^^^^^^^^^^^
20 |     MSG_LEN_PUBREC,
   |     ^^^^^^^^^^^^^^
...
24 |     MSG_TYPE_PUBACK,
   |     ^^^^^^^^^^^^^^^
25 |     MSG_TYPE_PUBCOMP,
   |     ^^^^^^^^^^^^^^^^
26 |     MSG_TYPE_PUBLISH,
   |     ^^^^^^^^^^^^^^^^
27 |     MSG_TYPE_PUBREC,
   |     ^^^^^^^^^^^^^^^
28 |     MSG_TYPE_PUBREL,
   |     ^^^^^^^^^^^^^^^
29 |     MSG_TYPE_SUBACK,
   |     ^^^^^^^^^^^^^^^
30 | 
31 |     MSG_TYPE_SUBSCRIBE,
   |     ^^^^^^^^^^^^^^^^^^
32 |     RETURN_CODE_ACCEPTED,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Ordering`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:1:35
  |
1 | use std::sync::atomic::{AtomicU8, Ordering};
  |                                   ^^^^^^^^

warning: unused imports: `io`, `net::SocketAddrV4`, `sync::Mutex`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:2:11
  |
2 | use std::{io, net::SocketAddr, net::SocketAddrV4, sync::Arc, sync::Mutex};
  |           ^^                   ^^^^^^^^^^^^^^^^^             ^^^^^^^^^^^

warning: unused import: `flag_qos_level`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:12:5
   |
12 |     flag_qos_level, flags_set, CLEAN_SESSION_TRUE, DUP_FALSE, WILL_FALSE,
   |     ^^^^^^^^^^^^^^

warning: unused imports: `Receiver`, `Sender`, `bounded`, `unbounded`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:29:26
   |
29 | use crossbeam::channel::{bounded, unbounded, Receiver, Sender};
   |                          ^^^^^^^  ^^^^^^^^^  ^^^^^^^^  ^^^^^^

warning: unused import: `crate::Connect::Connect`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:2:5
  |
2 | use crate::Connect::Connect;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `MessageDb`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:4:24
  |
4 | use crate::MessageDb::{MessageDb, MessageDbKey, MessageDbValue};
  |                        ^^^^^^^^^

warning: type `MQTT_SN` should have an upper camel case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:46:9
   |
46 |     pub MQTT_SN(DISCONNECTED)
   |         ^^^^^^^ help: convert the identifier to upper camel case: `MqttSn`
   |
   = note: `#[warn(non_camel_case_types)]` on by default

warning: variant `MSG_TYPE_ERR` should have an upper camel case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MsgType.rs:43:5
   |
43 |     MSG_TYPE_ERR = 0xFF,
   |     ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `MsgTypeErr`

warning: unused imports: `Receiver`, `Sender`, `bounded`, `unbounded`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PubAck.rs:2:26
  |
2 | use crossbeam::channel::{bounded, unbounded, Receiver, Sender};
  |                          ^^^^^^^  ^^^^^^^^^  ^^^^^^^^  ^^^^^^

warning: unused import: `std::str`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PubAck.rs:6:5
  |
6 | use std::str;
  |     ^^^^^^^^

warning: unused imports: `io`, `net::SocketAddrV4`, `net::SocketAddr`, `sync::Arc`, `sync::Mutex`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PubAck.rs:7:11
  |
7 | use std::{io, net::SocketAddr, net::SocketAddrV4, sync::Arc, sync::Mutex};
  |           ^^  ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^

warning: unused imports: `CLEAN_SESSION_FALSE`, `CLEAN_SESSION_TRUE`, `CleanSessionConst`, `DUP_FALSE`, `DUP_TRUE`, `DupConst`, `MSG_LEN_PUBREC`, `MSG_TYPE_CONNACK`, `MSG_TYPE_CONNECT`, `MSG_TYPE_PUBACK`, `MSG_TYPE_PUBCOMP`, `MSG_TYPE_PUBLISH`, `MSG_TYPE_PUBREC`, `MSG_TYPE_PUBREL`, `MSG_TYPE_SUBACK`, `MSG_TYPE_SUBSCRIBE`, `QOS_LEVEL_0`, `QOS_LEVEL_1`, `QOS_LEVEL_2`, `QOS_LEVEL_3`, `QoSConst`, `RETAIN_FALSE`, `RETAIN_TRUE`, `RETURN_CODE_ACCEPTED`, `RetainConst`, `StateMachine`, `TOPIC_ID_TYPE_NORNAL`, `TOPIC_ID_TYPE_PRE_DEFINED`, `TOPIC_ID_TYPE_RESERVED`, `TOPIC_ID_TYPE_SHORT`, `TopicIdTypeConst`, `WILL_FALSE`, `WILL_TRUE`, `WillConst`, `flag_qos_level`, `flags_set`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PubAck.rs:11:9
   |
11 |         flag_qos_level, flags_set, CleanSessionConst, DupConst, QoSConst,
   |         ^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^
12 |         RetainConst, TopicIdTypeConst, WillConst, CLEAN_SESSION_FALSE,
   |         ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^
13 |         CLEAN_SESSION_TRUE, DUP_FALSE, DUP_TRUE, QOS_LEVEL_0, QOS_LEVEL_1,
   |         ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^
14 |         QOS_LEVEL_2, QOS_LEVEL_3, RETAIN_FALSE, RETAIN_TRUE,
   |         ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^
15 |         TOPIC_ID_TYPE_NORNAL, TOPIC_ID_TYPE_PRE_DEFINED,
   |         ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^
16 |         TOPIC_ID_TYPE_RESERVED, TOPIC_ID_TYPE_SHORT, WILL_FALSE, WILL_TRUE,
   |         ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^
...
21 |     StateMachine,
   |     ^^^^^^^^^^^^
22 |     MSG_LEN_PUBACK,
23 |     MSG_LEN_PUBREC,
   |     ^^^^^^^^^^^^^^
24 | 
25 |     MSG_TYPE_CONNACK,
   |     ^^^^^^^^^^^^^^^^
26 |     MSG_TYPE_CONNECT,
   |     ^^^^^^^^^^^^^^^^
27 |     MSG_TYPE_PUBACK,
   |     ^^^^^^^^^^^^^^^
28 |     MSG_TYPE_PUBCOMP,
   |     ^^^^^^^^^^^^^^^^
29 |     MSG_TYPE_PUBLISH,
   |     ^^^^^^^^^^^^^^^^
30 |     MSG_TYPE_PUBREC,
   |     ^^^^^^^^^^^^^^^
31 |     MSG_TYPE_PUBREL,
   |     ^^^^^^^^^^^^^^^
32 |     MSG_TYPE_SUBACK,
   |     ^^^^^^^^^^^^^^^
33 | 
34 |     MSG_TYPE_SUBSCRIBE,
   |     ^^^^^^^^^^^^^^^^^^
35 |     RETURN_CODE_ACCEPTED,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::str`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PubRel.rs:5:5
  |
5 | use std::str;
  |     ^^^^^^^^

warning: unused imports: `CLEAN_SESSION_TRUE`, `CleanSessionConst`, `DUP_TRUE`, `DupConst`, `MSG_TYPE_CONNACK`, `MSG_TYPE_CONNECT`, `MSG_TYPE_PUBCOMP`, `MSG_TYPE_SUBACK`, `MSG_TYPE_SUBSCRIBE`, `QoSConst`, `RETAIN_FALSE`, `RETAIN_TRUE`, `RetainConst`, `TOPIC_ID_TYPE_PRE_DEFINED`, `TOPIC_ID_TYPE_RESERVED`, `TOPIC_ID_TYPE_SHORT`, `TopicIdTypeConst`, `WILL_TRUE`, `WillConst`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:9:36
   |
9  |         flag_qos_level, flags_set, CleanSessionConst, DupConst, QoSConst,
   |                                    ^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^
10 |         RetainConst, TopicIdTypeConst, WillConst, CLEAN_SESSION_FALSE,
   |         ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^
11 |         CLEAN_SESSION_TRUE, DUP_FALSE, DUP_TRUE, QOS_LEVEL_0, QOS_LEVEL_1,
   |         ^^^^^^^^^^^^^^^^^^             ^^^^^^^^
12 |         QOS_LEVEL_2, QOS_LEVEL_3, RETAIN_FALSE, RETAIN_TRUE,
   |                                   ^^^^^^^^^^^^  ^^^^^^^^^^^
13 |         TOPIC_ID_TYPE_NORNAL, TOPIC_ID_TYPE_PRE_DEFINED,
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^
14 |         TOPIC_ID_TYPE_RESERVED, TOPIC_ID_TYPE_SHORT, WILL_FALSE, WILL_TRUE,
   |         ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^              ^^^^^^^^^
...
18 |     MSG_LEN_PUBACK, MSG_LEN_PUBREC, MSG_TYPE_CONNACK, MSG_TYPE_CONNECT,
   |                                     ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^
19 |     MSG_TYPE_PUBACK, MSG_TYPE_PUBCOMP, MSG_TYPE_PUBLISH, MSG_TYPE_PUBREC,
   |                      ^^^^^^^^^^^^^^^^
20 |     MSG_TYPE_PUBREL, MSG_TYPE_SUBACK, MSG_TYPE_SUBSCRIBE, RETURN_CODE_ACCEPTED,
   |                      ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::MTU`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/StateMachine.rs:1:5
  |
1 | use crate::MTU;
  |     ^^^^^^^^^^

warning: unused imports: `MSG_TYPE_PUBACK`, `MSG_TYPE_SUBACK`, `MSG_TYPE_SUBSCRIBE`, `MsgTypeConst`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/StateMachine.rs:3:5
  |
3 |     MsgTypeConst, MSG_TYPE_CONNACK, MSG_TYPE_CONNECT, MSG_TYPE_MAX,
  |     ^^^^^^^^^^^^
4 |     MSG_TYPE_PUBACK, MSG_TYPE_PUBLISH, MSG_TYPE_SUBACK, MSG_TYPE_SUBSCRIBE,
  |     ^^^^^^^^^^^^^^^                    ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^

warning: unused imports: `CLEAN_SESSION_FALSE`, `CLEAN_SESSION_TRUE`, `CleanSessionConst`, `DUP_FALSE`, `DUP_TRUE`, `DupConst`, `MSG_LEN_PUBREC`, `MSG_TYPE_CONNACK`, `MSG_TYPE_CONNECT`, `MSG_TYPE_PUBACK`, `MSG_TYPE_PUBCOMP`, `MSG_TYPE_PUBLISH`, `MSG_TYPE_PUBREC`, `MSG_TYPE_PUBREL`, `MSG_TYPE_SUBACK`, `MSG_TYPE_SUBSCRIBE`, `QOS_LEVEL_0`, `QOS_LEVEL_1`, `QOS_LEVEL_2`, `QOS_LEVEL_3`, `QoSConst`, `RETAIN_FALSE`, `RETAIN_TRUE`, `RETURN_CODE_ACCEPTED`, `RetainConst`, `StateMachine`, `TOPIC_ID_TYPE_NORNAL`, `TOPIC_ID_TYPE_PRE_DEFINED`, `TOPIC_ID_TYPE_RESERVED`, `TOPIC_ID_TYPE_SHORT`, `TopicIdTypeConst`, `WILL_FALSE`, `WILL_TRUE`, `WillConst`, `flag_qos_level`, `flags_set`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:3:9
   |
3  |         flag_qos_level, flags_set, CleanSessionConst, DupConst, QoSConst,
   |         ^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^
4  |         RetainConst, TopicIdTypeConst, WillConst, CLEAN_SESSION_FALSE,
   |         ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^
5  |         CLEAN_SESSION_TRUE, DUP_FALSE, DUP_TRUE, QOS_LEVEL_0, QOS_LEVEL_1,
   |         ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^
6  |         QOS_LEVEL_2, QOS_LEVEL_3, RETAIN_FALSE, RETAIN_TRUE,
   |         ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^
7  |         TOPIC_ID_TYPE_NORNAL, TOPIC_ID_TYPE_PRE_DEFINED,
   |         ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^
8  |         TOPIC_ID_TYPE_RESERVED, TOPIC_ID_TYPE_SHORT, WILL_FALSE, WILL_TRUE,
   |         ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^
...
13 |     StateMachine,
   |     ^^^^^^^^^^^^
14 |     MSG_LEN_PUBREC,
   |     ^^^^^^^^^^^^^^
...
17 |     MSG_TYPE_CONNACK,
   |     ^^^^^^^^^^^^^^^^
18 |     MSG_TYPE_CONNECT,
   |     ^^^^^^^^^^^^^^^^
19 |     MSG_TYPE_PUBACK,
   |     ^^^^^^^^^^^^^^^
20 |     MSG_TYPE_PUBCOMP,
   |     ^^^^^^^^^^^^^^^^
21 |     MSG_TYPE_PUBLISH,
   |     ^^^^^^^^^^^^^^^^
22 |     MSG_TYPE_PUBREC,
   |     ^^^^^^^^^^^^^^^
23 |     MSG_TYPE_PUBREL,
   |     ^^^^^^^^^^^^^^^
24 |     MSG_TYPE_SUBACK,
   |     ^^^^^^^^^^^^^^^
25 | 
26 |     MSG_TYPE_SUBSCRIBE,
   |     ^^^^^^^^^^^^^^^^^^
27 |     RETURN_CODE_ACCEPTED,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Receiver`, `Sender`, `bounded`, `unbounded`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:30:26
   |
30 | use crossbeam::channel::{bounded, unbounded, Receiver, Sender};
   |                          ^^^^^^^  ^^^^^^^^^  ^^^^^^^^  ^^^^^^

warning: unused imports: `io`, `net::SocketAddrV4`, `net::SocketAddr`, `sync::Arc`, `sync::Mutex`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:34:11
   |
34 | use std::{io, net::SocketAddr, net::SocketAddrV4, sync::Arc, sync::Mutex};
   |           ^^  ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^

warning: unused imports: `CLEAN_SESSION_TRUE`, `CleanSessionConst`, `DUP_TRUE`, `DupConst`, `MSG_TYPE_CONNACK`, `MSG_TYPE_CONNECT`, `MSG_TYPE_PUBACK`, `MSG_TYPE_PUBLISH`, `QOS_LEVEL_0`, `QOS_LEVEL_1`, `QOS_LEVEL_2`, `QOS_LEVEL_3`, `QoSConst`, `RETAIN_FALSE`, `RETAIN_TRUE`, `RetainConst`, `TOPIC_ID_TYPE_PRE_DEFINED`, `TOPIC_ID_TYPE_RESERVED`, `TOPIC_ID_TYPE_SHORT`, `TopicIdTypeConst`, `WILL_TRUE`, `WillConst`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Subscribe.rs:11:9
   |
11 |         CleanSessionConst, DupConst, QoSConst, RetainConst, TopicIdTypeConst,
   |         ^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^
12 |         WillConst, CLEAN_SESSION_FALSE, CLEAN_SESSION_TRUE, DUP_FALSE,
   |         ^^^^^^^^^                       ^^^^^^^^^^^^^^^^^^
13 |         DUP_TRUE, QOS_LEVEL_0, QOS_LEVEL_1, QOS_LEVEL_2, QOS_LEVEL_3,
   |         ^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^
14 |         RETAIN_FALSE, RETAIN_TRUE, TOPIC_ID_TYPE_NORNAL,
   |         ^^^^^^^^^^^^  ^^^^^^^^^^^
15 |         TOPIC_ID_TYPE_PRE_DEFINED, TOPIC_ID_TYPE_RESERVED, TOPIC_ID_TYPE_SHORT,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^
16 |         WILL_FALSE, WILL_TRUE,
   |                     ^^^^^^^^^
...
19 |     MSG_TYPE_CONNACK,
   |     ^^^^^^^^^^^^^^^^
20 |     MSG_TYPE_CONNECT,
   |     ^^^^^^^^^^^^^^^^
21 |     MSG_TYPE_PUBACK,
   |     ^^^^^^^^^^^^^^^
22 |     MSG_TYPE_PUBLISH,
   |     ^^^^^^^^^^^^^^^^

warning: warn(rust_2018_idioms) is ignored unless specified at crate level
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:1:9
  |
1 | #![warn(rust_2018_idioms)]
  |         ^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_attributes)]` on by default

warning: unused import: `Bytes`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:4:13
  |
4 | use bytes::{Bytes, BytesMut};
  |             ^^^^^

warning: unused import: `unbounded`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:7:26
  |
7 | use crossbeam::channel::{unbounded, Receiver, Sender};
  |                          ^^^^^^^^^

warning: unused import: `crossbeam_utils`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:8:5
  |
8 | use crossbeam_utils;
  |     ^^^^^^^^^^^^^^^

warning: unused import: `std::net::UdpSocket`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:10:5
   |
10 | use std::net::UdpSocket;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `AtomicU8`, `Ordering`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:11:25
   |
11 | use std::sync::atomic::{AtomicU8, Ordering};
   |                         ^^^^^^^^  ^^^^^^^^

warning: unused import: `SystemTime`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:12:27
   |
12 | use std::time::{Duration, SystemTime};
   |                           ^^^^^^^^^^

warning: unused import: `hint`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:13:11
   |
13 | use std::{hint, thread};
   |           ^^^^

warning: unused import: `crate::MSG_TYPE_MAX`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:18:5
   |
18 | use crate::MSG_TYPE_MAX;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::MTU`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:19:5
   |
19 | use crate::MTU;
   |     ^^^^^^^^^^

warning: unused imports: `MsgTypeConst`, `StateMachine`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:20:13
   |
20 | use crate::{MsgTypeConst, StateMachine};
   |             ^^^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused imports: `MessageDbKey`, `MessageDbValue`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Transfer.rs:3:35
  |
3 | use crate::MessageDb::{MessageDb, MessageDbKey, MessageDbValue};
  |                                   ^^^^^^^^^^^^  ^^^^^^^^^^^^^^

warning: unused imports: `io`, `net::SocketAddrV4`, `sync::Mutex`
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/client_struct.rs:2:11
  |
2 | use std::{io, net::SocketAddr, net::SocketAddrV4, sync::Arc, sync::Mutex};
  |           ^^                   ^^^^^^^^^^^^^^^^^             ^^^^^^^^^^^

warning: unused macro definition: `dbg_buf`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/client_struct.rs:16:14
   |
16 | macro_rules! dbg_buf {
   |              ^^^^^^^

warning: type `client_struct` should have an upper camel case name
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/client_struct.rs:143:12
    |
143 | pub struct client_struct {
    |            ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ClientStruct`

warning: `#[macro_use]` only has an effect on `extern crate` and modules
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:2:1
  |
2 | #[macro_use]
  | ^^^^^^^^^^^^

warning: unreachable pattern
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:406:9
    |
402 |         msg_type => match return_code(pub_ack.return_code) {
    |         -------- matches any value
...
406 |         _ => Err(ClientError::WrongMessageType(
    |         ^ unreachable pattern
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: unreachable pattern
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:438:9
    |
434 |         msg_type => match return_code(sub_ack.return_code) {
    |         -------- matches any value
...
438 |         _ => Err(ClientError::WrongMessageType(
    |         ^ unreachable pattern

warning: unused variable: `sub`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:236:13
    |
236 |         let sub = subscribe_tx(topic, msg_id, qos, retain, &self);
    |             ^^^ help: if this is intentional, prefix it with an underscore: `_sub`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `state`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:173:17
    |
173 |             let state = new_machine.machine.state();
    |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `duration`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:309:36
    |
309 | pub fn connect2(client_id: String, duration: u16) -> BytesMut {
    |                                    ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_duration`

warning: unused variable: `socket`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:329:16
    |
329 | pub fn connect(socket: &UdpSocket, client_id: String) -> BytesMut {
    |                ^^^^^^ help: if this is intentional, prefix it with an underscore: `_socket`

warning: unused variable: `msg_type`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:366:9
    |
366 |     let msg_type = MsgType::CONNACK;
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_msg_type`

warning: unused variable: `read_len`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:369:20
    |
369 |     let (conn_ack, read_len) = ConnAck::try_read(buf, size).unwrap();
    |                    ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_read_len`

warning: unused variable: `msg_type`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:402:9
    |
402 |         msg_type => match return_code(pub_ack.return_code) {
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_msg_type`

warning: unused variable: `msg_type`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:434:9
    |
434 |         msg_type => match return_code(sub_ack.return_code) {
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_msg_type`

warning: unused variable: `socket`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:467:5
    |
467 |     socket: &UdpSocket,
    |     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_socket`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:135:5
    |
135 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `transfer`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:136:5
    |
136 |     transfer: &mut Transfer,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transfer`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:146:5
    |
146 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `transfer`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:147:5
    |
147 |     transfer: &mut Transfer,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transfer`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:159:5
    |
159 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `transfer`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:160:5
    |
160 |     transfer: &mut Transfer,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transfer`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:172:5
    |
172 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:196:5
    |
196 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `transfer`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:197:5
    |
197 |     transfer: &mut Transfer,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transfer`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:217:5
    |
217 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `transfer`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:218:5
    |
218 |     transfer: &mut Transfer,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transfer`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:239:5
    |
239 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `transfer`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:240:5
    |
240 |     transfer: &mut Transfer,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transfer`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:267:5
    |
267 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:290:5
    |
290 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `transfer`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:291:5
    |
291 |     transfer: &mut Transfer,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transfer`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:327:5
    |
327 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:348:5
    |
348 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `transfer`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:349:5
    |
349 |     transfer: &mut Transfer,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transfer`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:377:9
    |
377 |     let input = MsgType::CONNACK;
    |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `transfer`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:371:5
    |
371 |     transfer: &mut Transfer,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transfer`

warning: unused variable: `publish`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:435:25
    |
435 |                     let publish = Publish {
    |                         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_publish`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:421:5
    |
421 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:470:5
    |
470 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:509:5
    |
509 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:545:5
    |
545 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:586:5
    |
586 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `transfer`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:587:5
    |
587 |     transfer: &mut Transfer,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transfer`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:608:5
    |
608 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `transfer`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:609:5
    |
609 |     transfer: &mut Transfer,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transfer`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:647:5
    |
647 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `transfer`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:648:5
    |
648 |     transfer: &mut Transfer,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transfer`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:684:5
    |
684 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `transfer`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:685:5
    |
685 |     transfer: &mut Transfer,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transfer`

warning: unused variable: `input`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:704:5
    |
704 |     input: MsgType,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `result`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MessageDb.rs:91:21
   |
91 |                 let result = self.db.compare_and_swap(
   |                     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`

warning: unused variable: `result`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MessageDb.rs:98:21
   |
98 |                 let result = self.db.compare_and_swap(
   |                     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`

warning: unused variable: `cancel_thread`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:400:13
    |
400 |         let cancel_thread = thread::spawn(move || {
    |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cancel_thread`

warning: unused variable: `schedule_thread`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:435:13
    |
435 |         let schedule_thread = thread::spawn(move || {
    |             ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_schedule_thread`

warning: unused variable: `expire_thread`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:476:13
    |
476 |         let expire_thread = thread::spawn(move || {
    |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_expire_thread`

warning: unused variable: `topic_string`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TopicDb.rs:47:30
   |
47 |     pub fn delete(&mut self, topic_string: &String) -> Option<u16> {
   |                              ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_topic_string`

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Advertise.rs:17:8
   |
17 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Advertise.rs:21:8
   |
21 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_gw_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Advertise.rs:25:8
   |
25 |     fn constraint_gw_id(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_duration`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Advertise.rs:29:8
   |
29 |     fn constraint_duration(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ConnAck.rs:57:8
   |
57 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ConnAck.rs:61:8
   |
61 |     fn constraint_msg_type(val: &u8) -> Result<(), ConnAckError> {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_return_code`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ConnAck.rs:71:8
   |
71 |     fn constraint_return_code(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `name`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ConnectionDb.rs:10:5
   |
10 |     name: String,
   |     ^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Disconnect.rs:18:8
   |
18 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Disconnect.rs:22:8
   |
22 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_duration`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Disconnect.rs:26:8
   |
26 |     fn constraint_duration(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: type alias is never used: `ReturnCodeConst`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:32:1
   |
32 | type ReturnCodeConst = u8;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `RETURN_CODE_ACCEPTED`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:33:1
   |
33 | const RETURN_CODE_ACCEPTED: ReturnCodeConst = 0;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `RETURN_CODE_CONGESTION`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:34:1
   |
34 | const RETURN_CODE_CONGESTION: ReturnCodeConst = 1;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `RETURN_CODE_INVALID_TOPIC_ID`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:35:1
   |
35 | const RETURN_CODE_INVALID_TOPIC_ID: ReturnCodeConst = 2;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `RETURN_CODE_NOT_SUPPORTED`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:36:1
   |
36 | const RETURN_CODE_NOT_SUPPORTED: ReturnCodeConst = 3;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `bytes`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:125:5
    |
125 |     bytes: BytesMut,
    |     ^^^^^^^^^^^^^^^

warning: field is never read: `state`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:131:5
    |
131 |     state: Arc<AtomicU8>,
    |     ^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `addr`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:132:5
    |
132 |     addr: SocketAddr,
    |     ^^^^^^^^^^^^^^^^

warning: field is never read: `broker`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:133:5
    |
133 |     broker: UdpSocket,
    |     ^^^^^^^^^^^^^^^^^

warning: field is never read: `timing_wheel`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:134:5
    |
134 |     timing_wheel: &'static TimingWheel2<RetransmitHeader, RetransmitData>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: static is never used: `PUBREC_LEN`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:218:1
    |
218 | static PUBREC_LEN: u8 = 4;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `verify_will_topic`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:144:4
    |
144 | fn verify_will_topic(
    |    ^^^^^^^^^^^^^^^^^

warning: function is never used: `verify_will_msg`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:157:4
    |
157 | fn verify_will_msg(
    |    ^^^^^^^^^^^^^^^

warning: function is never used: `verify_will_topic_update`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:170:4
    |
170 | fn verify_will_topic_update(
    |    ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `verify_will_msg_update`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:265:4
    |
265 | fn verify_will_msg_update(
    |    ^^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `verify_subscribe`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:507:4
    |
507 | fn verify_subscribe(
    |    ^^^^^^^^^^^^^^^^

warning: function is never used: `verify_unsubscribe`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MainMachineClient.rs:543:4
    |
543 | fn verify_unsubscribe(
    |    ^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_topic_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MessageDb.rs:25:8
   |
25 |     fn constraint_topic_id(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_message`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/MessageDb.rs:39:8
   |
39 |     fn constraint_message(_val: &String) -> bool {
   |        ^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PingReq.rs:18:8
   |
18 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PingReq.rs:22:8
   |
22 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_client_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PingReq.rs:26:8
   |
26 |     fn constraint_client_id(_val: &u64) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PingResp.rs:16:8
   |
16 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PingResp.rs:20:8
   |
20 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PubAck.rs:49:8
   |
49 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PubAck.rs:53:8
   |
53 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_topic_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PubAck.rs:57:8
   |
57 |     fn constraint_topic_id(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PubAck.rs:61:8
   |
61 |     fn constraint_msg_id(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_return_code`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PubAck.rs:65:8
   |
65 |     fn constraint_return_code(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PubRel.rs:17:8
   |
17 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PubRel.rs:21:8
   |
21 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PubRel.rs:25:8
   |
25 |     fn constraint_msg_id(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:71:8
   |
71 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:75:8
   |
75 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_flags`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:79:8
   |
79 |     fn constraint_flags(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_topic_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:83:8
   |
83 |     fn constraint_topic_id(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:87:8
   |
87 |     fn constraint_msg_id(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_data`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:91:8
   |
91 |     fn constraint_data(_val: &String) -> bool {
   |        ^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/RegAck.rs:18:8
   |
18 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/RegAck.rs:22:8
   |
22 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_topic_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/RegAck.rs:26:8
   |
26 |     fn constraint_topic_id(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/RegAck.rs:30:8
   |
30 |     fn constraint_msg_id(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_return_code`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/RegAck.rs:34:8
   |
34 |     fn constraint_return_code(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Register.rs:19:8
   |
19 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Register.rs:23:8
   |
23 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_topic_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Register.rs:27:8
   |
27 |     fn constraint_topic_id(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Register.rs:31:8
   |
31 |     fn constraint_msg_id(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_topic_name`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Register.rs:35:8
   |
35 |     fn constraint_topic_name(_val: &String) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:50:8
   |
50 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:54:8
   |
54 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_flags`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:58:8
   |
58 |     fn constraint_flags(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_topic_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:62:8
   |
62 |     fn constraint_topic_id(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:66:8
   |
66 |     fn constraint_msg_id(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_return_code`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:70:8
   |
70 |     fn constraint_return_code(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Subscribe.rs:61:8
   |
61 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Subscribe.rs:65:8
   |
65 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_flags`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Subscribe.rs:69:8
   |
69 |     fn constraint_flags(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Subscribe.rs:73:8
   |
73 |     fn constraint_msg_id(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_topic_name`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Subscribe.rs:77:8
   |
77 |     fn constraint_topic_name(_val: &String) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^^^

warning: static is never used: `TIME_WHEEL_DEFAULT_DURATION_MS`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:98:1
   |
98 | static TIME_WHEEL_DEFAULT_DURATION_MS: usize = 300;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `reschedule`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:165:8
    |
165 |     fn reschedule(
    |        ^^^^^^^^^^

warning: function is never used: `f`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:26:9
    |
26  |         fn f() {}
    |         ^^^^^^
...
170 |         dbg!((&key, duration, self.hash.lock(), self.cur_counter));
    |         ---------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `function` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: function is never used: `type_name_of`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:27:9
    |
27  |         fn type_name_of<T>(_: T) -> &'static str {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
170 |         dbg!((&key, duration, self.hash.lock(), self.cur_counter));
    |         ---------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `function` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: associated function is never used: `get_cur_counter`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:181:8
    |
181 |     fn get_cur_counter(&mut self) -> usize {
    |        ^^^^^^^^^^^^^^^

warning: associated function is never used: `get_hash`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:186:8
    |
186 |     fn get_hash(&mut self, key: KEY) -> Result<VAL, Option<(String, KEY)>> {
    |        ^^^^^^^^

warning: function is never used: `f`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:26:9
    |
26  |         fn f() {}
    |         ^^^^^^
...
190 |                     dbg!((&key, val));
    |                     ----------------- in this macro invocation
    |
    = note: this warning originates in the macro `function` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: function is never used: `type_name_of`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:27:9
    |
27  |         fn type_name_of<T>(_: T) -> &'static str {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
190 |                     dbg!((&key, val));
    |                     ----------------- in this macro invocation
    |
    = note: this warning originates in the macro `function` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: function is never used: `f`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:26:9
    |
26  |         fn f() {}
    |         ^^^^^^
...
196 |                 let string = format!("[{}:hash.lock()]", function!());
    |                                                          ----------- in this macro invocation
    |
    = note: this warning originates in the macro `function` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: function is never used: `type_name_of`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:27:9
    |
27  |         fn type_name_of<T>(_: T) -> &'static str {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
196 |                 let string = format!("[{}:hash.lock()]", function!());
    |                                                          ----------- in this macro invocation
    |
    = note: this warning originates in the macro `function` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: associated function is never used: `reset`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:223:8
    |
223 |     fn reset(&mut self, key: KEY) -> Result<(), (String, KEY)> {
    |        ^^^^^

warning: function is never used: `f`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:26:9
    |
26  |         fn f() {}
    |         ^^^^^^
...
231 |                 let string = format!("[{}:hash.remove()]", function!());
    |                                                            ----------- in this macro invocation
    |
    = note: this warning originates in the macro `function` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: function is never used: `type_name_of`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:27:9
    |
27  |         fn type_name_of<T>(_: T) -> &'static str {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
231 |                 let string = format!("[{}:hash.remove()]", function!());
    |                                                            ----------- in this macro invocation
    |
    = note: this warning originates in the macro `function` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: associated function is never used: `keep_alive_expire`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:307:8
    |
307 |     fn keep_alive_expire(&mut self) -> &Slot<KEY> {
    |        ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `print`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:314:8
    |
314 |     fn print(&mut self) {
    |        ^^^^^

warning: field is never read: `conn_duration`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:352:5
    |
352 |     conn_duration: u16,
    |     ^^^^^^^^^^^^^^^^^^

warning: field is never read: `latest_counter`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:353:5
    |
353 |     latest_counter: u32,
    |     ^^^^^^^^^^^^^^^^^^^

warning: field is never read: `schedule_tx`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:358:5
    |
358 |     schedule_tx: Sender<(SocketAddr, u8, u16, u16, BytesMut)>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `cancel_tx`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:360:5
    |
360 |     cancel_tx: Sender<(SocketAddr, u8, u16, u16)>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `transmit_rx`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:363:5
    |
363 |     transmit_rx: Receiver<(SocketAddr, BytesMut)>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `any_as_u8_slice`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TopicDb.rs:85:11
   |
85 | unsafe fn any_as_u8_slice<T: Sized>(p: &T) -> &[u8] {
   |           ^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/UnsubAck.rs:17:8
   |
17 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/UnsubAck.rs:21:8
   |
21 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/UnsubAck.rs:25:8
   |
25 |     fn constraint_msg_id(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Unsubscribe.rs:20:8
   |
20 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Unsubscribe.rs:24:8
   |
24 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_flags`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Unsubscribe.rs:28:8
   |
28 |     fn constraint_flags(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_id`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Unsubscribe.rs:32:8
   |
32 |     fn constraint_msg_id(_val: &u16) -> bool {
   |        ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_topic_name`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Unsubscribe.rs:36:8
   |
36 |     fn constraint_topic_name(_val: &String) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillMsg.rs:18:8
   |
18 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillMsg.rs:22:8
   |
22 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_flags`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillMsg.rs:26:8
   |
26 |     fn constraint_flags(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_will_topic`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillMsg.rs:30:8
   |
30 |     fn constraint_will_topic(_val: &String) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillMsgReq.rs:16:8
   |
16 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillMsgReq.rs:20:8
   |
20 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillMsgResp.rs:17:8
   |
17 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillMsgResp.rs:21:8
   |
21 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_return_code`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillMsgResp.rs:25:8
   |
25 |     fn constraint_return_code(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillMsgUpd.rs:16:8
   |
16 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillMsgUpd.rs:20:8
   |
20 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_will_topic`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillMsgUpd.rs:24:8
   |
24 |     fn constraint_will_topic(_val: &String) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillTopic.rs:18:8
   |
18 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillTopic.rs:22:8
   |
22 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_flags`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillTopic.rs:26:8
   |
26 |     fn constraint_flags(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_will_topic`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillTopic.rs:30:8
   |
30 |     fn constraint_will_topic(_val: &String) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillTopicReq.rs:16:8
   |
16 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillTopicReq.rs:20:8
   |
20 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillTopicResp.rs:17:8
   |
17 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillTopicResp.rs:21:8
   |
21 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_return_code`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillTopicResp.rs:25:8
   |
25 |     fn constraint_return_code(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_len`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillTopicUpd.rs:18:8
   |
18 |     fn constraint_len(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_msg_type`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillTopicUpd.rs:22:8
   |
22 |     fn constraint_msg_type(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_flags`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillTopicUpd.rs:26:8
   |
26 |     fn constraint_flags(_val: &u8) -> bool {
   |        ^^^^^^^^^^^^^^^^

warning: associated function is never used: `constraint_will_topic`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/WillTopicUpd.rs:30:8
   |
30 |     fn constraint_will_topic(_val: &String) -> bool {
   |        ^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `STATE_LOST`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/client_struct.rs:62:1
   |
62 | const STATE_LOST: StateTypeConst = 3;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `STATE_SLEEP`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/client_struct.rs:63:1
   |
63 | const STATE_SLEEP: StateTypeConst = 4;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `STATE_AWAKE`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/client_struct.rs:64:1
   |
64 | const STATE_AWAKE: StateTypeConst = 5;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `MSG_TYPE_SUBSCRIBE`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/client_struct.rs:71:1
   |
71 | const MSG_TYPE_SUBSCRIBE: MsgTypeConst = 0x12;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `MSG_TYPE_SUBACK`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/client_struct.rs:72:1
   |
72 | const MSG_TYPE_SUBACK: MsgTypeConst = 0x13;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `MSG_TYPE_PUBACK`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/client_struct.rs:74:1
   |
74 | const MSG_TYPE_PUBACK: MsgTypeConst = 0xD;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `MSG_TYPE_WILLMSGRESP`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/client_struct.rs:77:1
   |
77 | const MSG_TYPE_WILLMSGRESP: MsgTypeConst = 0x1D; // 29
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `MSG_TYPE_ENCAP_MSG`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/client_struct.rs:80:1
   |
80 | const MSG_TYPE_ENCAP_MSG: MsgTypeConst = 0xFE;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `addr`
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/client_struct.rs:150:5
    |
150 |     addr: SocketAddr,
    |     ^^^^^^^^^^^^^^^^

warning: constant is never used: `RETURN_CODE_CONGESTION`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:81:1
   |
81 | const RETURN_CODE_CONGESTION: ReturnCodeConst = 1;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `RETURN_CODE_INVALID_TOPIC_ID`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:82:1
   |
82 | const RETURN_CODE_INVALID_TOPIC_ID: ReturnCodeConst = 2;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `RETURN_CODE_NOT_SUPPORTED`
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:83:1
   |
83 | const RETURN_CODE_NOT_SUPPORTED: ReturnCodeConst = 3;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: module `Advertise` should have a snake case name
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:4:9
  |
4 | pub mod Advertise;
  |         ^^^^^^^^^ help: convert the identifier to snake case: `advertise`
  |
  = note: `#[warn(non_snake_case)]` on by default

warning: module `ClientLib` should have a snake case name
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:5:9
  |
5 | pub mod ClientLib;
  |         ^^^^^^^^^ help: convert the identifier to snake case: `client_lib`

warning: module `ConnAck` should have a snake case name
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:6:9
  |
6 | pub mod ConnAck;
  |         ^^^^^^^ help: convert the identifier to snake case: `conn_ack`

warning: module `Connect` should have a snake case name
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:7:9
  |
7 | pub mod Connect;
  |         ^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `connect`

warning: module `ConnectionDb` should have a snake case name
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:8:9
  |
8 | pub mod ConnectionDb;
  |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `connection_db`

warning: module `DebugFunctions` should have a snake case name
 --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:9:9
  |
9 | pub mod DebugFunctions;
  |         ^^^^^^^^^^^^^^ help: convert the identifier to snake case: `debug_functions`

warning: module `Disconnect` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:10:9
   |
10 | pub mod Disconnect;
   |         ^^^^^^^^^^ help: convert the identifier to snake case: `disconnect`

warning: module `Errors` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:11:9
   |
11 | pub mod Errors;
   |         ^^^^^^ help: convert the identifier to snake case: `errors`

warning: module `Functions` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:12:9
   |
12 | pub mod Functions;
   |         ^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `functions`

warning: module `MainMachineClient` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:13:9
   |
13 | pub mod MainMachineClient;
   |         ^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `main_machine_client`

warning: module `MessageDb` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:14:9
   |
14 | pub mod MessageDb;
   |         ^^^^^^^^^ help: convert the identifier to snake case: `message_db`

warning: module `MsgType` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:15:9
   |
15 | pub mod MsgType;
   |         ^^^^^^^ help: convert the identifier to snake case: `msg_type`

warning: module `PingReq` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:16:9
   |
16 | pub mod PingReq;
   |         ^^^^^^^ help: convert the identifier to snake case: `ping_req`

warning: module `PingResp` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:17:9
   |
17 | pub mod PingResp;
   |         ^^^^^^^^ help: convert the identifier to snake case: `ping_resp`

warning: module `PubAck` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:18:9
   |
18 | pub mod PubAck;
   |         ^^^^^^ help: convert the identifier to snake case: `pub_ack`

warning: module `PubRel` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:19:9
   |
19 | pub mod PubRel;
   |         ^^^^^^ help: convert the identifier to snake case: `pub_rel`

warning: module `Publish` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:20:9
   |
20 | pub mod Publish;
   |         ^^^^^^^ help: convert the identifier to snake case: `publish`

warning: module `RegAck` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:21:9
   |
21 | pub mod RegAck;
   |         ^^^^^^ help: convert the identifier to snake case: `reg_ack`

warning: module `Register` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:22:9
   |
22 | pub mod Register;
   |         ^^^^^^^^ help: convert the identifier to snake case: `register`

warning: module `StateEnum` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:23:9
   |
23 | pub mod StateEnum;
   |         ^^^^^^^^^ help: convert the identifier to snake case: `state_enum`

warning: module `StateMachine` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:24:9
   |
24 | pub mod StateMachine;
   |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `state_machine`

warning: module `SubAck` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:25:9
   |
25 | pub mod SubAck;
   |         ^^^^^^ help: convert the identifier to snake case: `sub_ack`

warning: module `Subscribe` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:26:9
   |
26 | pub mod Subscribe;
   |         ^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `subscribe`

warning: module `SubscriberDb` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:27:9
   |
27 | pub mod SubscriberDb;
   |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `subscriber_db`

warning: module `TimingWheel2` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:28:9
   |
28 | pub mod TimingWheel2;
   |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `timing_wheel2`

warning: module `TopicDb` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:29:9
   |
29 | pub mod TopicDb;
   |         ^^^^^^^ help: convert the identifier to snake case: `topic_db`

warning: module `Transfer` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:30:9
   |
30 | pub mod Transfer;
   |         ^^^^^^^^ help: convert the identifier to snake case: `transfer`

warning: module `UnsubAck` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:31:9
   |
31 | pub mod UnsubAck;
   |         ^^^^^^^^ help: convert the identifier to snake case: `unsub_ack`

warning: module `Unsubscribe` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:32:9
   |
32 | pub mod Unsubscribe;
   |         ^^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `unsubscribe`

warning: module `WillMsg` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:33:9
   |
33 | pub mod WillMsg;
   |         ^^^^^^^ help: convert the identifier to snake case: `will_msg`

warning: module `WillMsgReq` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:34:9
   |
34 | pub mod WillMsgReq;
   |         ^^^^^^^^^^ help: convert the identifier to snake case: `will_msg_req`

warning: module `WillMsgResp` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:35:9
   |
35 | pub mod WillMsgResp;
   |         ^^^^^^^^^^^ help: convert the identifier to snake case: `will_msg_resp`

warning: module `WillMsgUpd` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:36:9
   |
36 | pub mod WillMsgUpd;
   |         ^^^^^^^^^^ help: convert the identifier to snake case: `will_msg_upd`

warning: module `WillTopic` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:37:9
   |
37 | pub mod WillTopic;
   |         ^^^^^^^^^ help: convert the identifier to snake case: `will_topic`

warning: module `WillTopicReq` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:38:9
   |
38 | pub mod WillTopicReq;
   |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `will_topic_req`

warning: module `WillTopicResp` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:39:9
   |
39 | pub mod WillTopicResp;
   |         ^^^^^^^^^^^^^ help: convert the identifier to snake case: `will_topic_resp`

warning: module `WillTopicUpd` should have a snake case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:40:9
   |
40 | pub mod WillTopicUpd;
   |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `will_topic_upd`

warning: constant `StateEnumLen` should have an upper case name
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/lib.rs:71:11
   |
71 | pub const StateEnumLen: usize = 5;
   |           ^^^^^^^^^^^^ help: convert the identifier to upper case: `STATE_ENUM_LEN`
   |
   = note: `#[warn(non_upper_case_globals)]` on by default

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:173:29
    |
173 | ...                   publish_rx(&buf, size, &self);
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:177:29
    |
177 | ...                   puback_rx(&buf, size, &self);
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:181:29
    |
181 | ...                   suback_rx(&buf, size, &self);
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:213:21
    |
213 |                     socket_tx.send_to(&bytes[..], addr);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:252:9
    |
252 |         publish_tx(topic_id, msg_id, qos, retain, data, &self);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ConnAck.rs:46:34
   |
46 |     Debug, Clone, Copy, Getters, Setters, MutGetters, CopyGetters, Default,
   |                                  ^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: this warning originates in the derive macro `Setters` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused `Result` that must be used
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ConnAck.rs:85:9
   |
85 | /         client
86 | |             .cancel_tx
87 | |             .send((client.remote_addr, conn_ack.msg_type, 0, 0));
   | |_________________________________________________________________^
   |
   = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Connect.rs:95:9
   |
95 | /         client
96 | |             .transmit_tx
97 | |             .send((client.remote_addr, bytes_buf.to_owned()));
   | |______________________________________________________________^
   |
   = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Connect.rs:99:9
    |
99  | /         client.schedule_tx.send((
100 | |             client.remote_addr,
101 | |             MSG_TYPE_CONNACK,
102 | |             0,
103 | |             0,
104 | |             bytes_buf,
105 | |         ));
    | |___________^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:165:13
    |
165 | /             transfer.connection_db.update(
166 | |                 transfer.peer,
167 | |                 &old_machine,
168 | |                 &new_machine,
169 | |             );
    | |______________^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:192:21
    |
192 |                     transfer.connection_db.create(transfer.peer, &new_machine);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Functions.rs:206:21
    |
206 |                     transfer.connection_db.create(transfer.peer, &new_machine);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/PubAck.rs:80:9
   |
80 | /         client.cancel_tx.send((
81 | |             client.remote_addr,
82 | |             pub_ack.msg_type,
83 | |             pub_ack.topic_id,
84 | |             pub_ack.msg_id,
85 | |         ));
   | |___________^
   |
   = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:153:17
    |
153 |                 client.transmit_tx.send((client.remote_addr, bytes));
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:179:17
    |
179 |                 client.transmit_tx.send((client.remote_addr, bytes.clone()));
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:184:17
    |
184 | /                 client.schedule_tx.send((
185 | |                     client.remote_addr,
186 | |                     MSG_TYPE_PUBREL,
187 | |                     0,
188 | |                     publish.msg_id,
189 | |                     bytes,
190 | |                 ));
    | |___________________^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:201:9
    |
201 |         client.subscribe_tx.send(publish);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:224:5
    |
224 | /     client
225 | |         .transmit_tx
226 | |         .send((client.remote_addr, bytes_buf.to_owned()));
    | |__________________________________________________________^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:233:13
    |
233 | /             client.schedule_tx.send((
234 | |                 client.remote_addr,
235 | |                 MSG_TYPE_PUBACK,
236 | |                 topic_id,
237 | |                 msg_id,
238 | |                 bytes_buf,
239 | |             ));
    | |_______________^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:256:13
    |
256 | /             client.schedule_tx.send((
257 | |                 client.remote_addr,
258 | |                 MSG_TYPE_PUBREC,
259 | |                 0,
260 | |                 msg_id,
261 | |                 bytes_buf,
262 | |             ));
    | |_______________^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:89:9
   |
89 | /         client.cancel_tx.send((
90 | |             client.remote_addr,
91 | |             sub_ack.msg_type,
92 | |             0,
93 | |             sub_ack.msg_id,
94 | |         ));
   | |___________^
   |
   = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
  --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Subscribe.rs:94:5
   |
94 | /     client
95 | |         .transmit_tx
96 | |         .send((client.remote_addr, bytes_buf.to_owned()));
   | |__________________________________________________________^
   |
   = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Subscribe.rs:97:5
    |
97  | /     client.schedule_tx.send((
98  | |         client.remote_addr,
99  | |         MSG_TYPE_SUBACK,
100 | |         0,
101 | |         0,
102 | |         bytes_buf,
103 | |     ));
    | |_______^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` in tuple element 2 that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:49:9
    |
49  | /         match $val {
50  | |             tmp => {
51  | |
52  | |                 // Added the timestamp
...   |
67  | |             }
68  | |         }
    | |_________^
...
170 |           dbg!((&key, duration, self.hash.lock(), self.cur_counter));
    |           ---------------------------------------------------------- in this macro invocation
    |
    = note: this `Result` may be an `Err` variant, which should be handled
    = note: this warning originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:417:29
    |
417 | ...                   cancel_wheel_lock.cancel(retrans_hdr);
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:454:29
    |
454 | / ...                   rx_wheel_lock.schedule(
455 | | ...                       retrans_hdr,
456 | | ...                       data,
457 | | ...                       default_duration,
458 | | ...                   );
    | |________________________^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/TimingWheel2.rs:490:25
    |
490 |                         transmit_tx.send((retrans_hdr.addr, data.bytes));
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> /mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/client_struct.rs:175:9
    |
175 | /         self.state.compare_exchange(
176 | |             cur_state,
177 | |             result,
178 | |             Ordering::Acquire,
179 | |             Ordering::Relaxed,
180 | |         );
    | |__________^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: `client-lib` (lib) generated 302 warnings
   Compiling clientV2 v0.1.0 (/mnt/OneTB/repos/Rust_MQTT-SN-01/apps/client2)
warning: unused import: `core::fmt::Debug`
 --> src/main.rs:5:5
  |
5 | use core::fmt::Debug;
  |     ^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `SystemTime`
 --> src/main.rs:8:27
  |
8 | use std::time::{Duration, SystemTime};
  |                           ^^^^^^^^^^

warning: unused import: `hint`
 --> src/main.rs:9:11
  |
9 | use std::{hint, thread};
  |           ^^^^

warning: unused import: `arr_macro::arr`
  --> src/main.rs:11:5
   |
11 | use arr_macro::arr;
   |     ^^^^^^^^^^^^^^

warning: unused imports: `Datelike`, `Local`, `Timelike`
  --> src/main.rs:16:14
   |
16 | use chrono::{Datelike, Local, Timelike};
   |              ^^^^^^^^  ^^^^^  ^^^^^^^^

warning: unused imports: `Receiver`, `Sender`
  --> src/main.rs:17:37
   |
17 | use crossbeam::channel::{unbounded, Receiver, Sender};
   |                                     ^^^^^^^^  ^^^^^^

warning: unused import: `trace_var::trace_var`
  --> src/main.rs:18:5
   |
18 | use trace_var::trace_var;
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `CLEAN_SESSION_FALSE`, `CLEAN_SESSION_TRUE`, `CleanSessionConst`, `DUP_FALSE`, `DUP_TRUE`, `DupConst`, `QOS_LEVEL_1`, `QOS_LEVEL_2`, `QOS_LEVEL_3`, `QoSConst`, `RETAIN_TRUE`, `RetainConst`, `TOPIC_ID_TYPE_NORNAL`, `TOPIC_ID_TYPE_PRE_DEFINED`, `TOPIC_ID_TYPE_RESERVED`, `TOPIC_ID_TYPE_SHORT`, `TopicIdTypeConst`, `WILL_FALSE`, `WILL_TRUE`, `WillConst`
  --> src/main.rs:29:9
   |
29 |         CleanSessionConst, DupConst, QoSConst, RetainConst, TopicIdTypeConst,
   |         ^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^
30 |         WillConst, CLEAN_SESSION_FALSE, CLEAN_SESSION_TRUE, DUP_FALSE,
   |         ^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^
31 |         DUP_TRUE, QOS_LEVEL_0, QOS_LEVEL_1, QOS_LEVEL_2, QOS_LEVEL_3,
   |         ^^^^^^^^               ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^
32 |         RETAIN_FALSE, RETAIN_TRUE, TOPIC_ID_TYPE_NORNAL,
   |                       ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^
33 |         TOPIC_ID_TYPE_PRE_DEFINED, TOPIC_ID_TYPE_RESERVED, TOPIC_ID_TYPE_SHORT,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^
34 |         WILL_FALSE, WILL_TRUE,
   |         ^^^^^^^^^^  ^^^^^^^^^

warning: `#[macro_use]` only has an effect on `extern crate` and modules
 --> src/main.rs:2:1
  |
2 | #[macro_use]
  | ^^^^^^^^^^^^
  |
  = note: `#[warn(unused_attributes)]` on by default

warning: unreachable statement
   --> src/main.rs:111:5
    |
102 | /     loop {
103 | |         let msg = format!("hi {:?}", i);
104 | |         let msg2 = format!("hi {:?}", i+1000);
105 | |         client_main.publish(1, i, QOS_LEVEL_0, RETAIN_FALSE, msg.to_string());
...   |
108 | |         thread::sleep(Duration::from_secs(2));
109 | |     }
    | |_____- any code following this expression is unreachable
110 |       // TODO loop to process ingress subscribed messages.
111 |       rx_thread2.join().expect("The sender thread has panicked");
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement
    |
    = note: `#[warn(unreachable_code)]` on by default

warning: unused variable: `tx_thread`
  --> src/main.rs:60:9
   |
60 |     let tx_thread = thread::spawn(move || {
   |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tx_thread`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `rx_thread`
  --> src/main.rs:68:9
   |
68 |     let rx_thread = thread::spawn(move || loop {
   |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_rx_thread`

warning: unused variable: `rx_thread2`
  --> src/main.rs:72:9
   |
72 |     let rx_thread2 = thread::spawn(move || loop {
   |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_rx_thread2`

warning: unused variable: `rx_thread2`
  --> src/main.rs:98:9
   |
98 |     let rx_thread2 = thread::spawn(move || loop {
   |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_rx_thread2`

warning: static is never used: `NTHREADS`
  --> src/main.rs:43:1
   |
43 | static NTHREADS: i32 = 3;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function is never used: `foo`
  --> src/main.rs:47:4
   |
47 | fn foo(i: u8) -> u8 {
   |    ^^^

warning: function is never used: `bar`
  --> src/main.rs:50:4
   |
50 | fn bar(i: u8) -> u8 {
   |    ^^^

warning: constant is never used: `MESSAGES`
  --> src/main.rs:53:1
   |
53 | const MESSAGES: usize = 10;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `THREADS`
  --> src/main.rs:54:1
   |
54 | const THREADS: usize = 4;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `mpmc`
  --> src/main.rs:56:4
   |
56 | fn mpmc() {
   |    ^^^^

warning: crate `clientV2` should have a snake case name
  |
  = note: `#[warn(non_snake_case)]` on by default
  = help: convert the identifier to snake case: `client_v2`

warning: unused `Result` that must be used
  --> src/main.rs:69:9
   |
69 |         dbg!(rx.recv());
   |         ^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_must_use)]` on by default
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: this warning originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused `Result` that must be used
  --> src/main.rs:73:9
   |
73 |         dbg!(rx2.recv());
   |         ^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: this warning originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused `Result` that must be used
  --> src/main.rs:99:9
   |
99 |         dbg!(client_sub.subscribe_rx.recv());
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: this warning originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: `clientV2` (bin "clientV2") generated 24 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 1.56s
     Running `target/debug/clientV2`
03-14 14:48:57.531034224<new:115> (sleep_duration, default_duration_ms) = (
    100,
    300,
)
03-14 14:48:57.531127969[new:113] max_slot = 1280
03-14 14:48:57.531169439[new:113] default_duration = 3
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:223] &client_id = "exofense/g7GV-qE68Q0l6Z6Cnsyq-"
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Connect.rs:91] connect.clone() = Connect {
    len: 36,
    msg_type: 0x4,
    flags: 0b00000100,
    protocol_id: 1,
    duration: 5,
    client_id: "exofense/g7GV-qE68Q0l6Z6Cnsyq-",
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Connect.rs:93] bytes_buf.clone() = b"$\x04\x04\x01\0\x05exofense/g7GV-qE68Q0l6Z6Cnsyq-"
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
.0.0.1:60000,
    b"$\x04\x04\x01\0\x05exofense/g7GV-qE68Q0l6Z6Cnsyq-",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:226] *self.state.lock().unwrap() = 1
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:232] *self.state.lock().unwrap() = 2
03-14 14:48:57.532776334<{{closure}}:441> bytes.clone() = b"$\x04\x04\x01\0\x05exofense/g7GV-qE68Q0l6Z6Cnsyq-"
03-14 14:48:57.533007079<{{closure}}:449> retrans_hdr = RetransmitHeader {
    addr: 127.0.0.1:60000,
    msg_type: 5,
    topic_id: 0,
    msg_id: 0,
}
03-14 14:48:57.533091148<{{closure}}:450> default_duration = 3
03-14 14:48:57.533129272[schedule:144] index = 4
03-14 14:48:57.533164826[schedule:144] slot = Slot { entries: Mutex { data: [], poisoned: false, .. } }
03-14 14:48:57.533223004[schedule:144] hash = {}
03-14 14:48:57.533261093[schedule:144] vec = []
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ConnAck.rs:83] conn_ack.clone() = ConnAck {
    len: 3,
    msg_type: 0x5,
    return_code: 0,
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:187] *self.state.lock().unwrap() = 2
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
:193] *self.state.lock().unwrap() = 0
03-14 14:48:57.533918984<{{closure}}:412> retrans_hdr = RetransmitHeader&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
 {
    addr: 127.0.0.1:60000,
    msg_type: 5,
    topic_id: 0,
    msg_id: 0,
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\n\x12\0\0\x01hello",
)
03-14 14:48:57.533968101[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:227] &qos = 0
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:227] &qos = 0
03-14 14:48:57.534016205[cancel:205] hash = {RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 5, topic_id: 0, msg_id: 0 }: RetransmitData { bytes: b"$\x04\x04\x01\0\x05exofense/g7GV-qE68Q0l6Z6Cnsyq-" }}
<{{closure}}:441> bytes.clone() = b"\n\x12\0\0\x01hello"
03-14 14:48:57.534338134<{{closure}}:449> retrans_hdr = RetransmitHeader {
    addr: 127.0.0.1:60000,
    msg_type: 19,
    topic_id: 0,
    msg_id: 0,
}
03-14 14:48:57.534419371<{{closure}}:450> default_duration = 3
03-14 14:48:57.534457357[schedule:144] index = 4
03-14 14:48:57.534492482[schedule:144] slot = Slot { entries: Mutex { data: [(RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 5, topic_id: 0, msg_id: 0 }, 3)], poisoned: false, .. } }
03-14 14:48:57.534592858[schedule:144] hash = {}
03-14 14:48:57.534629992[schedule:144] vec = [(RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 5, topic_id: 0, msg_id: 0 }, 3)]
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
03-14 14:48:57.534717310<{{closure}}:441> bytes.clone() = b"\x0b\x12\0\0\x02hello2"
03-14 14:48:57.534779475<{{closure}}:449> retrans_hdr = RetransmitHeader {
    addr: 127.0.0.1:60000,
    msg_type: 19,
    topic_id: 0,
    msg_id: 0,
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:82] sub_ack.clone() = SubAck {
    len: 8,
    msg_type: 0x13,
    flags: 0b00101111,
    topic_id: 1,
    msg_id: 1,
    return_code: 0,
}
03-14 14:&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
48:57.534859643<{{closure}}:450> default_duration = 3
03-14 14:48:57.534944888[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
03-14 14:48:57.534969348[schedule:144] index = 4
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x0c\0\0\x01\0\0hi 0",
)
<{{closure}}:412> retrans_hdr = RetransmitHeader {
    addr: 127.0.0.1:60000,
    msg_type: 19,
    topic_id: 0,
    msg_id: 1,
}
03-14 14:48:57.535087967[schedule:144] slot = Slot { entries: Mutex { data: [(RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 5, topic_id: 0, msg_id: 0 }, 3), (RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 19, topic_id: 0, msg_id: 0 }, 3)], poisoned: false, .. } }
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0e\x0c\0\0\x02\0\0hi 1000",
)
03-14 14:48:57.535382902[schedule:144] hash = {RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 19, topic_id: 0, msg_id: 0 }: RetransmitData { bytes: b"\n\x12\0\0\x01hello" }}
03-14 14:48:57.535614336[schedule:144] vec = [(RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 5, topic_id: 0, msg_id: 0 }, 3), (RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 19, topic_id: 0, msg_id: 0 }, 3)]
03-14 14:48:57.535761632[cancel:205] hash = {RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 19, topic_id: 0, msg_id: 0 }: RetransmitData { bytes: b"\x0b\x12\0\0\x02hello2" }}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:82] sub_ack.clone() = SubAck {
    len: 8,
    msg_type: 0x13,
    flags: 0b00101111,
    topic_id: 2,
    msg_id: 2,
    return_code: 0,
}
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
03-14 14:48:57.535987179<{{closure}}:412> retrans_hdr = RetransmitHeader {
    addr: 127.0.0.1:60000,
    msg_type: 19,
    topic_id: 0,
    msg_id: 2,
}
03-14 14:48:57.536108216[cancel:205] hash = {RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 19, topic_id: 0, msg_id: 0 }: RetransmitData { bytes: b"\x0b\x12\0\0\x02hello2" }}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:105] publish.clone() = Publish {
    len: 11,
    msg_type: 0xc,
    flags: 0b00000000,
    topic_id: 1,
    msg_id: 0,
    data: "hi 0",
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:106] publish.clone().data = "hi 0"
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:109] (size, read_len) = (
    11,
    11,
)
[src/main.rs:99] client_sub.subscribe_rx.recv() = Ok(
    Publish {
        len: 11,
        msg_type: 0xc,
        flags: 0b00000000,
        topic_id: 1,
        msg_id: 0,
        data: "hi 0",
    },
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:105] publish.clone() = Publish {
    len: 14,
    msg_type: 0xc,
    flags: 0b00000000,
    topic_id: 2,
    msg_id: 0,
    data: "hi 1000",
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:106] publish.clone().data = "hi 1000"
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:109] (size, read_len) = (
    14,
    14,
)
[src/main.rs:99] client_sub.subscribe_rx.recv() = Ok(
    Publish {
        len: 14,
        msg_type: 0xc,
        flags: 0b00000000,
        topic_id: 2,
        msg_id: 0,
        data: "hi 1000",
    },
)
03-14 14:48:57.932929413<{{closure}}:488> (retrans_hdr.addr, data.bytes.clone()) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
03-14 14:48:57.933266170<{{closure}}:488> (retrans_hdr.addr, data.bytes.clone()) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:82] sub_ack.clone() = SubAck {
    len: 8,
    msg_type: 0x13,
    flags: 0b00101111,
    topic_id: 2,
    msg_id: 2,
    return_code: 0,
}
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
03-14 14:48:57.935887748<{{closure}}:412> retrans_hdr = RetransmitHeader {
    addr: 127.0.0.1:60000,
    msg_type: 19,
    topic_id: 0,
    msg_id: 2,
}
03-14 14:48:57.936132893[cancel:205] hash = {RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 19, topic_id: 0, msg_id: 0 }: RetransmitData { bytes: b"\x0b\x12\0\0\x02hello2" }}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:82] sub_ack.clone() = SubAck {
    len: 8,
    msg_type: 0x13,
    flags: 0b00101111,
    topic_id: 2,
    msg_id: 2,
    return_code: 0,
}
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
03-14 14:48:57.937261503<{{closure}}:412> retrans_hdr = RetransmitHeader {
    addr: 127.0.0.1:60000,
    msg_type: 19,
    topic_id: 0,
    msg_id: 2,
}
03-14 14:48:57.937436374[cancel:205] hash = {RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 19, topic_id: 0, msg_id: 0 }: RetransmitData { bytes: b"\x0b\x12\0\0\x02hello2" }}
03-14 14:48:58.534144700<{{closure}}:488> (retrans_hdr.addr, data.bytes.clone()) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
03-14 14:48:58.534411581<{{closure}}:488> (retrans_hdr.addr, data.bytes.clone()) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:82] sub_ack.clone() = SubAck {
    len: 8,
    msg_type: 0x13,
    flags: 0b00101111,
    topic_id: 2,
    msg_id: 2,
    return_code: 0,
}
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
03-14 14:48:58.536625605<{{closure}}:412> retrans_hdr = RetransmitHeader {
    addr: 127.0.0.1:60000,
    msg_type: 19,
    topic_id: 0,
    msg_id: 2,
}
03-14 14:48:58.536831458[cancel:205] hash = {RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 19, topic_id: 0, msg_id: 0 }: RetransmitData { bytes: b"\x0b\x12\0\0\x02hello2" }}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:82] sub_ack.clone() = SubAck {
    len: 8,
    msg_type: 0x13,
    flags: 0b00101111,
    topic_id: 2,
    msg_id: 2,
    return_code: 0,
}
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
03-14 14:48:58.537971061<{{closure}}:412> retrans_hdr = RetransmitHeader {
    addr: 127.0.0.1:60000,
    msg_type: 19,
    topic_id: 0,
    msg_id: 2,
}
03-14 14:48:58.538161474[cancel:205] hash = {RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 19, topic_id: 0, msg_id: 0 }: RetransmitData { bytes: b"\x0b\x12\0\0\x02hello2" }}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:227] &qos = 0
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:227] &qos = 0
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x0c\0\0\x01\0\x01hi 1",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0e\x0c\0\0\x02\0\x01hi 1001",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:105] publish.clone() = Publish {
    len: 11,
    msg_type: 0xc,
    flags: 0b00000000,
    topic_id: 1,
    msg_id: 1,
    data: "hi 1",
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:106] publish.clone().data = "hi 1"
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:109] (size, read_len) = (
    11,
    11,
)
[src/main.rs:99] client_sub.subscribe_rx.recv() = Ok(
    Publish {
        len: 11,
        msg_type: 0xc,
        flags: 0b00000000,
        topic_id: 1,
        msg_id: 1,
        data: "hi 1",
    },
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:105] publish.clone() = Publish {
    len: 14,
    msg_type: 0xc,
    flags: 0b00000000,
    topic_id: 2,
    msg_id: 1,
    data: "hi 1001",
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:106] publish.clone().data = "hi 1001"
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:109] (size, read_len) = (
    14,
    14,
)
[src/main.rs:99] client_sub.subscribe_rx.recv() = Ok(
    Publish {
        len: 14,
        msg_type: 0xc,
        flags: 0b00000000,
        topic_id: 2,
        msg_id: 1,
        data: "hi 1001",
    },
)
03-14 14:48:59.735783685<{{closure}}:488> (retrans_hdr.addr, data.bytes.clone()) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
03-14 14:48:59.736085199<{{closure}}:488> (retrans_hdr.addr, data.bytes.clone()) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:82] sub_ack.clone() = SubAck {
    len: 8,
    msg_type: 0x13,
    flags: 0b00101111,
    topic_id: 2,
    msg_id: 2,
    return_code: 0,
}
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
03-14 14:48:59.738750879<{{closure}}:412> retrans_hdr = RetransmitHeader {
    addr: 127.0.0.1:60000,
    msg_type: 19,
    topic_id: 0,
    msg_id: 2,
}
03-14 14:48:59.739019625[cancel:205] hash = {RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 19, topic_id: 0, msg_id: 0 }: RetransmitData { bytes: b"\x0b\x12\0\0\x02hello2" }}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:82] sub_ack.clone() = SubAck {
    len: 8,
    msg_type: 0x13,
    flags: 0b00101111,
    topic_id: 2,
    msg_id: 2,
    return_code: 0,
}
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
03-14 14:48:59.740870150<{{closure}}:412> retrans_hdr = RetransmitHeader {
    addr: 127.0.0.1:60000,
    msg_type: 19,
    topic_id: 0,
    msg_id: 2,
}
03-14 14:48:59.741123637[cancel:205] hash = {RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 19, topic_id: 0, msg_id: 0 }: RetransmitData { bytes: b"\x0b\x12\0\0\x02hello2" }}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:227] &qos = 0
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:227] &qos = 0
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x0c\0\0\x01\0\x02hi 2",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0e\x0c\0\0\x02\0\x02hi 1002",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:105] publish.clone() = Publish {
    len: 11,
    msg_type: 0xc,
    flags: 0b00000000,
    topic_id: 1,
    msg_id: 2,
    data: "hi 2",
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:106] publish.clone().data = "hi 2"
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:109] (size, read_len) = (
    11,
    11,
)
[src/main.rs:99] client_sub.subscribe_rx.recv() = Ok(
    Publish {
        len: 11,
        msg_type: 0xc,
        flags: 0b00000000,
        topic_id: 1,
        msg_id: 2,
        data: "hi 2",
    },
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:105] publish.clone() = Publish {
    len: 14,
    msg_type: 0xc,
    flags: 0b00000000,
    topic_id: 2,
    msg_id: 2,
    data: "hi 1002",
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:106] publish.clone().data = "hi 1002"
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:109] (size, read_len) = (
    14,
    14,
)
[src/main.rs:99] client_sub.subscribe_rx.recv() = Ok(
    Publish {
        len: 14,
        msg_type: 0xc,
        flags: 0b00000000,
        topic_id: 2,
        msg_id: 2,
        data: "hi 1002",
    },
)
03-14 14:49:02.138784275<{{closure}}:488> (retrans_hdr.addr, data.bytes.clone()) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
03-14 14:49:02.139107284<{{closure}}:488> (retrans_hdr.addr, data.bytes.clone()) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:82] sub_ack.clone() = SubAck {
    len: 8,
    msg_type: 0x13,
    flags: 0b00101111,
    topic_id: 2,
    msg_id: 2,
    return_code: 0,
}
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
03-14 14:49:02.141614604<{{closure}}:412> retrans_hdr = RetransmitHeader {
    addr: 127.0.0.1:60000,
    msg_type: 19,
    topic_id: 0,
    msg_id: 2,
}
03-14 14:49:02.141870384[cancel:205] hash = {RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 19, topic_id: 0, msg_id: 0 }: RetransmitData { bytes: b"\x0b\x12\0\0\x02hello2" }}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:82] sub_ack.clone() = SubAck {
    len: 8,
    msg_type: 0x13,
    flags: 0b00101111,
    topic_id: 2,
    msg_id: 2,
    return_code: 0,
}
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
03-14 14:49:02.147491664<{{closure}}:412> retrans_hdr = RetransmitHeader {
    addr: 127.0.0.1:60000,
    msg_type: 19,
    topic_id: 0,
    msg_id: 2,
}
03-14 14:49:02.147630786[cancel:205] hash = {RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 19, topic_id: 0, msg_id: 0 }: RetransmitData { bytes: b"\x0b\x12\0\0\x02hello2" }}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:227] &qos = 0
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:227] &qos = 0
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x0c\0\0\x01\0\x03hi 3",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0e\x0c\0\0\x02\0\x03hi 1003",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:105] publish.clone() = Publish {
    len: 11,
    msg_type: 0xc,
    flags: 0b00000000,
    topic_id: 1,
    msg_id: 3,
    data: "hi 3",
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:106] publish.clone().data = "hi 3"
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:109] (size, read_len) = (
    11,
    11,
)
[src/main.rs:99] client_sub.subscribe_rx.recv() = Ok(
    Publish {
        len: 11,
        msg_type: 0xc,
        flags: 0b00000000,
        topic_id: 1,
        msg_id: 3,
        data: "hi 3",
    },
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:105] publish.clone() = Publish {
    len: 14,
    msg_type: 0xc,
    flags: 0b00000000,
    topic_id: 2,
    msg_id: 3,
    data: "hi 1003",
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:106] publish.clone().data = "hi 1003"
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:109] (size, read_len) = (
    14,
    14,
)
[src/main.rs:99] client_sub.subscribe_rx.recv() = Ok(
    Publish {
        len: 14,
        msg_type: 0xc,
        flags: 0b00000000,
        topic_id: 2,
        msg_id: 3,
        data: "hi 1003",
    },
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:227] &qos = 0
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:227] &qos = 0
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x0c\0\0\x01\0\x04hi 4",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0e\x0c\0\0\x02\0\x04hi 1004",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:105] publish.clone() = Publish {
    len: 11,
    msg_type: 0xc,
    flags: 0b00000000,
    topic_id: 1,
    msg_id: 4,
    data: "hi 4",
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:106] publish.clone().data = "hi 4"
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:109] (size, read_len) = (
    11,
    11,
)
[src/main.rs:99] client_sub.subscribe_rx.recv() = Ok(
    Publish {
        len: 11,
        msg_type: 0xc,
        flags: 0b00000000,
        topic_id: 1,
        msg_id: 4,
        data: "hi 4",
    },
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:105] publish.clone() = Publish {
    len: 14,
    msg_type: 0xc,
    flags: 0b00000000,
    topic_id: 2,
    msg_id: 4,
    data: "hi 1004",
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:106] publish.clone().data = "hi 1004"
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:109] (size, read_len) = (
    14,
    14,
)
[src/main.rs:99] client_sub.subscribe_rx.recv() = Ok(
    Publish {
        len: 14,
        msg_type: 0xc,
        flags: 0b00000000,
        topic_id: 2,
        msg_id: 4,
        data: "hi 1004",
    },
)
03-14 14:49:06.943928744<{{closure}}:488> (retrans_hdr.addr, data.bytes.clone()) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
03-14 14:49:06.944217140<{{closure}}:488> (retrans_hdr.addr, data.bytes.clone()) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x12\0\0\x02hello2",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:82] sub_ack.clone() = SubAck {
    len: 8,
    msg_type: 0x13,
    flags: 0b00101111,
    topic_id: 2,
    msg_id: 2,
    return_code: 0,
}
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
03-14 14:49:06.946545756<{{closure}}:412> retrans_hdr = RetransmitHeader {
    addr: 127.0.0.1:60000,
    msg_type: 19,
    topic_id: 0,
    msg_id: 2,
}
03-14 14:49:06.946755988[cancel:205] hash = {RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 19, topic_id: 0, msg_id: 0 }: RetransmitData { bytes: b"\x0b\x12\0\0\x02hello2" }}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/SubAck.rs:82] sub_ack.clone() = SubAck {
    len: 8,
    msg_type: 0x13,
    flags: 0b00101111,
    topic_id: 2,
    msg_id: 2,
    return_code: 0,
}
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
03-14 14:49:06.947914119<{{closure}}:412> retrans_hdr = RetransmitHeader {
    addr: 127.0.0.1:60000,
    msg_type: 19,
    topic_id: 0,
    msg_id: 2,
}
03-14 14:49:06.948117387[cancel:205] hash = {RetransmitHeader { addr: 127.0.0.1:60000, msg_type: 19, topic_id: 0, msg_id: 0 }: RetransmitData { bytes: b"\x0b\x12\0\0\x02hello2" }}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:227] &qos = 0
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:227] &qos = 0
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x0c\0\0\x01\0\x05hi 5",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0e\x0c\0\0\x02\0\x05hi 1005",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:105] publish.clone() = Publish {
    len: 11,
    msg_type: 0xc,
    flags: 0b00000000,
    topic_id: 1,
    msg_id: 5,
    data: "hi 5",
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:106] publish.clone().data = "hi 5"
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:109] (size, read_len) = (
    11,
    11,
)
[src/main.rs:99] client_sub.subscribe_rx.recv() = Ok(
    Publish {
        len: 11,
        msg_type: 0xc,
        flags: 0b00000000,
        topic_id: 1,
        msg_id: 5,
        data: "hi 5",
    },
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:105] publish.clone() = Publish {
    len: 14,
    msg_type: 0xc,
    flags: 0b00000000,
    topic_id: 2,
    msg_id: 5,
    data: "hi 1005",
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:106] publish.clone().data = "hi 1005"
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:109] (size, read_len) = (
    14,
    14,
)
[src/main.rs:99] client_sub.subscribe_rx.recv() = Ok(
    Publish {
        len: 14,
        msg_type: 0xc,
        flags: 0b00000000,
        topic_id: 2,
        msg_id: 5,
        data: "hi 1005",
    },
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:227] &qos = 0
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:227] &qos = 0
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0b\x0c\0\0\x01\0\x06hi 6",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/ClientLib.rs:212] (addr, &bytes) = (
    127.0.0.1:60000,
    b"\x0e\x0c\0\0\x02\0\x06hi 1006",
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:105] publish.clone() = Publish {
    len: 11,
    msg_type: 0xc,
    flags: 0b00000000,
    topic_id: 1,
    msg_id: 6,
    data: "hi 6",
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:106] publish.clone().data = "hi 6"
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:109] (size, read_len) = (
    11,
    11,
)
[src/main.rs:99] client_sub.subscribe_rx.recv() = Ok(
    Publish {
        len: 11,
        msg_type: 0xc,
        flags: 0b00000000,
        topic_id: 1,
        msg_id: 6,
        data: "hi 6",
    },
)
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:105] publish.clone() = Publish {
    len: 14,
    msg_type: 0xc,
    flags: 0b00000000,
    topic_id: 2,
    msg_id: 6,
    data: "hi 1006",
}
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:106] publish.clone().data = "hi 1006"
[/mnt/OneTB/repos/Rust_MQTT-SN-01/lib/client-lib/src/Publish.rs:109] (size, read_len) = (
    14,
    14,
)
[src/main.rs:99] client_sub.subscribe_rx.recv() = Ok(
    Publish {
        len: 14,
        msg_type: 0xc,
        flags: 0b00000000,
        topic_id: 2,
        msg_id: 6,
        data: "hi 1006",
    },
)
